/*
====================================================================
DDL Script: Create Gold Layer Views
====================================================================

Script Purpose:
    Create fact and dimension views for the Gold layer in the data warehouse.
    The Gold layer represents the final dimension and fact tables (star schema)
    
    Each view performs transformation and combines data from silver layer to produce
    a clean, enriched, and business-ready dataset.

    • Fact view: gold_fact_sales
    • Dimension views: gold_dim_products, gold_dim_customers

Usage:
    These views can be queried directly for analytics and reporting.
====================================================================
*/

-- ====================================================================
-- Create Fact View: gold_fact_sales
-- ====================================================================
CREATE OR REPLACE VIEW gold_fact_sales AS
SELECT
    sd.sls_ord_num    AS order_number,    -- Unique sales order identifier
    pr.product_key    AS product_key,     -- Surrogate key referencing dim_products
    cu.customer_key   AS customer_key,    -- Surrogate key referencing dim_customers
    sd.sls_order_dt   AS order_date,      -- Date when the order was placed
    sd.sls_ship_dt    AS shipping_date,   -- Date when the order was shipped
    sd.sls_due_dt     AS due_date,        -- Date when the order is due
    sd.sls_sales      AS sales_amount,    -- Revenue generated by this order
    sd.sls_quantity   AS quantity,        -- Number of units sold
    sd.sls_price      AS price            -- Unit price at time of sale
FROM datawarehouse.silver_crm_sales_details sd
LEFT JOIN datawarehouse.gold_dim_products pr
    ON sd.sls_prd_key = pr.product_number
LEFT JOIN datawarehouse.gold_dim_customers cu
    ON sd.sls_cust_id = cu.customer_id;


-- ====================================================================
-- Create Dimension View: gold_dim_products
-- ====================================================================
CREATE OR REPLACE VIEW gold_dim_products AS
SELECT
    ROW_NUMBER() OVER (ORDER BY pn.prd_start_dt, pn.prd_key)
        AS product_key,      -- Surrogate key for each product
    pn.prd_id              AS product_id,        -- Natural key of the product
    pn.prd_key             AS product_number,    -- Unique product code
    pn.prd_nm              AS product_name,      -- Descriptive name of the product
    pn.cat_id              AS category_id,       -- Foreign key to product category
    pc.cat                 AS category,          -- High-level category name
    pc.subcat              AS subcategory,       -- Sub-category name
    pc.maintenance         AS maintenance,       -- Maintenance flag or description
    pn.prd_cost            AS cost,              -- Cost to produce the product
    pn.prd_line            AS product_line,      -- Line or family of the product
    pn.prd_start_dt        AS start_date         -- Date when the product was introduced
FROM datawarehouse.silver_crm_prd_info pn
LEFT JOIN datawarehouse.silver_erp_px_cat_g1v2 pc
    ON pn.cat_id = pc.id
WHERE pn.prd_end_dt IS NULL;                   -- Only include active products


-- ====================================================================
-- Create Dimension View: gold_dim_customers
-- ====================================================================
CREATE OR REPLACE VIEW gold_dim_customers AS
SELECT
    ROW_NUMBER() OVER (ORDER BY ci.cst_id)
        AS customer_key,     -- Surrogate key for each customer
    ci.cst_id              AS customer_id,       -- Natural key (customer identifier)
    ci.cst_key             AS customer_number,   -- Business key used in other systems
    ci.cst_firstname       AS first_name,        -- Customer's first name
    ci.cst_lastname        AS last_name,         -- Customer's last name
    la.cntry               AS country,           -- Customer's country of residence
    ci.cst_marital_status  AS marital_status,    -- Customer's marital status
    (CASE
        WHEN ci.cst_gndr <> 'n/a' THEN ci.cst_gndr
        ELSE COALESCE(ca.gen, 'n/a')
     END)                  AS gender,            -- Gender: prefer CRM value, else ERP fallback
    ca.bdate               AS birthdate,         -- Customer's date of birth
    ci.cst_create_date     AS create_date        -- Date the customer record was created
FROM datawarehouse.silver_crm_cust_info ci
LEFT JOIN datawarehouse.silver_erp_cust_az12 ca
    ON ci.cst_key = ca.cid
LEFT JOIN datawarehouse.silver_erp_loc_a101 la
    ON ci.cst_key = la.cid;
